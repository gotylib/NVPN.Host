name: Build, Test and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_COMPOSE_VERSION: v2.24.5
  POSTGRES_PASSWORD: 1234

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Установка .NET для бэкенда
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    # Сборка и тесты бэкенда
    - name: Build and test backend
      run: |
        dotnet restore NVPN.Host.sln
        dotnet build NVPN.Host.sln --configuration Release --no-restore
        dotnet test NVPN.Host.sln --verbosity normal

    # Установка Node.js для фронтенда
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    # Установка зависимостей и тесты фронтенда
    - name: Install and test frontend
      working-directory: ./nvpn-host-client
      run: |
        npm install
        npm run build
        npm test --if-present  # Запуск тестов, если они есть

  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'  # Только для main ветки
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Установка Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    # Сборка Docker образов
    - name: Build Docker images
      run: |
        docker-compose -f compose.yaml build

    # Деплой на сервер через SSH
    - name: Deploy to production
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /root/NVPN.Host
          git pull origin main
          docker-compose down
          docker-compose up -d --build
