version: '3.8'

services:
  frontend:
    build:
      context: ./nvpn-host-client
      dockerfile: Dockerfile
    ports:
      - "7000:80"
      - "7001:443"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - vpn-network
    volumes:
      - ./nvpn-host-client/ssl:/etc/nginx/ssl:ro

  backend:
    build:
      context: .
      dockerfile: NVPN.Host.Server/Dockerfile
    ports:
      - "8181:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=vpndb;Username=postgres;Password=1234
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vpn-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: vpndb
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d vpndb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - vpn-network

volumes:
  pgdata:

networks:
  vpn-network:
    driver: bridge